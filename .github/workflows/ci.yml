name: Publish to PyPI

on:
  push:
    tags:
      - 'v[0-9]*'  # Match tags that resemble a version

permissions:
  contents: read

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      wheel-distribution: ${{ steps.wheel-distribution.outputs.path }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # deep clone for versioning
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.12"
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine hatchling
          cd js_src && npm ci
      - name: Build package
        run: python -m build
      - name: Record wheel distribution path
        id: wheel-distribution
        run: echo "path=$(ls dist/*.whl)" >> $GITHUB_OUTPUT
      - name: Store distribution files
        uses: actions/upload-artifact@v4
        with:
          name: python-distribution-files
          path: dist/
          retention-days: 1

  test:
    needs: prepare
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Retrieve distribution files
        uses: actions/download-artifact@v4
        with:
          name: python-distribution-files
          path: dist/
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[test]"
      - name: Run tests
        run: pytest -v

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Retrieve distribution files
        uses: actions/download-artifact@v4
        with:
          name: python-distribution-files
          path: dist/
      - name: Check dist contents
        run: |
          ls -la dist/
          test -n "$(find dist -name '*.whl')" || exit 1
          test -n "$(find dist -name '*.tar.gz')" || exit 1
      - name: Publish to PyPI
        env:
          TWINE_REPOSITORY: pypi
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: python -m twine upload dist/*

name: CI/CD

on:
  push:
    tags:
      - "v[0-9]*" # Match version tags
  pull_request: # Run CI checks on PRs
  workflow_dispatch: # Allow manual triggers

permissions:
  contents: write # Needed for creating releases
  id-token: write # Needed for PyPI trusted publishing

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      wheel-distribution: ${{ steps.wheel-distribution.outputs.path }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # deep clone for versioning
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.12"
          cache: pip
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip --verbose
          pip install build twine hatch --verbose
          cd js_src && npm ci --verbose
      - name: Build package
        run: hatch build
      - name: Record wheel distribution path
        id: wheel-distribution
        run: echo "path=$(ls dist/*.whl)" >> $GITHUB_OUTPUT
      - name: Store distribution files
        uses: actions/upload-artifact@v4
        with:
          name: python-distribution-files
          path: dist/
          retention-days: 5
          if-no-files-found: error # Fail if dist/ is empty

  test:
    needs: prepare
    strategy:
      matrix:
        python-version: ["3.10", "3.12"]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Retrieve distribution files
        uses: actions/download-artifact@v4
        with:
          name: python-distribution-files
          path: dist/
          if-no-files-found: error
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip --verbose
          pip install -e ".[dev,test]" --verbose # Install dev for pre-commit
      - name: Run pre-commit checks
        run: pre-commit run --all-files --show-diff-on-failure
      - name: Run tests
        run: pytest -v

  publish:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') # Only run on version tags
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/salvajson # Replace with your package name
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Retrieve distribution files
        uses: actions/download-artifact@v4
        with:
          name: python-distribution-files
          path: dist/
          if-no-files-found: error
      - name: Check dist contents
        run: |
          ls -la dist/
          test -n "$(find dist -name '*.whl')" || exit 1
          test -n "$(find dist -name '*.tar.gz')" || exit 1
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/* --verbose

      # The GitHub Release (including notes and assets) is now created by python-semantic-release
      # when it generates the tag that triggers this publish workflow.
      # The `upload_to_release = true` and default asset handling in PSR's config
      # should cover uploading artifacts from `dist/` (built by PSR's `build_command`).
      # - name: Create GitHub Release
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     tag="${GITHUB_REF#refs/tags/}"
      #     gh release create "$tag" \
      #       --title="Release $tag" \
      #       --draft=false \
      #       --prerelease=false \
      #       ./dist/*
